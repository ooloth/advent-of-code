#!/usr/bin/env sh

# Usage: run <day><part>
#
# Example: run 1a
# Example: run 25b

set -e
source "bin/validate_args"
source "bin/env"

day="${1%[ab]}" # strip the "a" or "b" from the end of $1
part="${1#$day}" # strip the $day from the beginning of $1

# Check if -s or --submit flag is passed
if echo "$@" | grep -Eq -- '-s|--submit'; then
  submit=true
else
  submit=false
fi

function get_answer() {
  local day="$1"
  local part="$2"

  local solution="aoc/$AOC_YEAR/$AOC_LANGUAGE/$day$part.$AOC_LANGUAGE_EXTENSION"
  local input=$(cat "aoc/$AOC_YEAR/inputs/$day.txt")
  local answer=""

  # TODO: handle no input file
  # TODO: handle empty input
  # TODO: handle no solution file

  case "$AOC_LANGUAGE" in
    python)
      answer=$(uv run "$solution" "$input") ;;
    typescript)
      answer=$(deno run --allow-env --allow-read "$solution" "$input") ;;
    *)
      echo "üö® Unsupported language: $AOC_LANGUAGE"
      exit 1 ;;
  esac

  echo "$answer"
}

function print_answer() {
  local answer="$1"

  if ! echo "$answer" | grep -Eq '^[0-9]+$'; then
    echo "ü§î Solution is not an integer. Have you solved this puzzle?"
  fi

  echo "üîç Answer: $answer"
}

function submit_answer() {
  local answer="$1"
  echo "üöÄ Submitting answer: $answer"
  echo "TODO"
}

answer=$(get_answer "$day" "$part")

if [ "$submit" = true ]; then
  submit_answer "$answer"
else
  print_answer "$answer"
fi
